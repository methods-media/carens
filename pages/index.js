import { useTranslation } from 'next-i18next';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import Head from 'next/head';
import Banner from '../src/modules/Banner';
import ScrollSequence from '../src/modules/ImageSequence';
import { exterior1 } from 'public/assets/seq/seq';
import { useEffect, useRef, useState } from 'react';
import { useRouter } from 'next/router';
import { EngineSection } from '@src/components/EngineSection';
import { SwiperSection } from '../src/components/SwiperSection';
import ParallaxSection from '@src/components/parallex';
import { motion, useScroll, useTransform, useMotionValue } from 'framer-motion';
import ParallaxSectionSecond from '@src/components/parallex2';

export default function Home() {
  const { t } = useTranslation('common');
  const [selectedFeature, setSelectedFeature] = useState(0);
  const isArabic = false; // Replace with your actual language detection logic
  const [mounted, setMounted] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(false)
  const router = useRouter();
  const { locale, query } = useRouter();

  useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) {
    return null; // or a loading state
  }

  const openModal = () => {
    setIsModalOpen(true)
  }
  return (
    <main className="">
      <Head>
        {router.locale == 'ar' ? <title>كيا تاسمان - البروشور الرقمي</title> : <title>Kia Tasman - Digital Brochure</title>}
        <link rel="icon" href="/kia.ico"  />
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Banner />
      <EngineSection />
      <div className="relative" style={{ zIndex: 1000 }}>
        <ScrollSequence
          id="canvas4"
          imagesUrl={exterior1}
          totalFrames={exterior1?.length}
          text={t('led_rear_lamps')}
          description={t('led_rear_lamps_description')}
          endTextFrame={100}
          text2={t('fastback_design')}
          description2={t('fastback_description')}
          startTextFrame={30}

          startTextFrame2={120}
          endTextFrame2={exterior1?.length}
        />
      </div>
      <SwiperSection />
      <div className='relative'>
        <img src='https://methods.ae/wp-content/uploads/ktk-dashboard.png' width={'100vw'} height={'100vh'} className='!w-[100vw] !h-[100vh] !object-cover' />
        <div onClick={openModal} className=' absolute top-1/4 left-1/5 !w-5 bg-white z-[90] rounded-full !cursor-pointer !h-5'
        > </div>
        <div onClick={openModal} className=' absolute top-[35%] left-[80%] !w-5 bg-white z-[90] rounded-full cursor-pointer !h-5'
        > </div>
        <div onClick={openModal} className=' absolute top-[45%] left-[60%] !w-5 bg-white z-[90] rounded-full cursor-pointer !h-5'
        > </div>


        {isModalOpen ?
          <div className='bg-black/90 z-[100] flex flex-col items-center justify-center absolute left-0 top-0 w-screen h-screen'>
            <div className="bg-white rounded-xl flex flex-col  items-end w-[500px] min-h-[500px] relative" >
              <button onClick={() => {
                setIsModalOpen(false)
              }} className="text-black text-3xl rounded-full w-10 h-10 bg-white absolute end-4 top-4 ">×</button>
              <div className='flex flex-col items-center gap-6 w-full'>
                <img src="https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=400" width={'100%'} height={'70%'} alt="Analytics Overview" className="rounded-t-xl" />
                <div className="px-6">
                  <div className="text-[#333] text-center font-[InterBold] text-[20px]">Analytics Overview</div>
                  <div className="text-[#666]  text-center font-[InterRegular] text-sm">Real-time analytics dashboard showing key performance indicators, user engagement metrics, and conversion rates.</div>
                </div>
              </div>
            </div>
          </div> : null}
      </div>
      <ParallaxSection />
      <div className='w-screen h-screen bg-[#06141F]  flex flex-col items-center gap-10'>
        <div className='w-full flex items-start justify-center gap-12'>
          <div className='flex items-start gap-5'>
            <button className={`text-sm md:text-[21px] bg-[#06141F] px-[27px] py-[10px] text-gray-200 hover:text-[#06141F]  hover:bg-gray-200 border border-gray-200 rounded-sm  btn-showRoom ${locale == 'ar' ? 'font-["GSSBold"]' : 'font-["InterBold"]'} cursor-pointer `} onClick={() => onViewChange('exterior')}
            >             Engine 1</button>
            <button className={`text-sm md:text-[21px] bg-[#06141F] px-[27px] py-[10px]  text-gray-200  hover:text-[#06141F]  hover:bg-gray-200 border border-gray-200 rounded-sm   btn-showRoom ${locale == 'ar' ? 'font-["GSSBold"]' : 'font-["InterBold"]'} cursor-pointer `} onClick={() => onViewChange('interior')}
            >

              Engine 2


            </button>
            <button className={`text-sm md:text-[21px] bg-[#06141F] px-[27px] py-[10px]  text-gray-200  hover:text-[#06141F]  hover:bg-gray-200 border border-gray-200 rounded-sm   btn-showRoom ${locale == 'ar' ? 'font-["GSSBold"]' : 'font-["InterBold"]'} cursor-pointer `} onClick={() => onViewChange('interior')}
            >

              Engine 2


            </button>

          </div>
          <img
            src='https://methods.ae/wp-content/uploads/tk-engine.png'
            height={550}
            width={450}
            className="animate-bounce"
            style={{
              animation: 'float 2.5s ease-in-out infinite'

            }}
          />
        </div>

      </div>

      <ParallaxSectionSecond />

    </main>
  );
}

export async function getStaticProps({ locale }) {
  return {
    props: {
      ...(await serverSideTranslations(locale, ['common'])),
    },
  };
}
